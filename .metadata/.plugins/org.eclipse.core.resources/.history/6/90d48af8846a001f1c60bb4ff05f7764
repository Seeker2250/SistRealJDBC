package days03;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map.Entry;
import java.util.Set;

import org.doit.domain.DeptVO;
import org.doit.domain.EmpVO;

import com.util.DBConn;

public class Ex04 {
	//    [실행결과]
	//ACCOUNTING(3)
	//empno ename hiredate pay
	//empno ename hiredate pay
	//empno ename hiredate pay
	//RESEARCH(3)
	//empno ename hiredate pay
	//empno ename hiredate pay
	//empno ename hiredate pay
	//SALES(6)
	//empno ename hiredate pay
	//empno ename hiredate pay
	//empno ename hiredate pay
	//empno ename hiredate pay
	//empno ename hiredate pay
	//empno ename hiredate pay
	//OPERATIONS(1)
	//empno ename hiredate pay 
	//NULL - 1명
	//empno ename hiredate pay
	public static void main(String[] args) {
		//		String sql = " SELECT dname, empno, ename, hiredate, sal+NVL(comm, 0) pay "
		//				+ " FROM emp e "
		//				+ " LEFT JOIN dept d ON e.deptno = d.deptno ";
		String deptSql = " SELECT dname, COUNT (empno) cnt, d.deptno "
				+ " FROM dept d FULL OUTER JOIN emp e ON e.deptno = d.deptno "
				+ " GROUP BY dname, d.deptno "
				+ " ORDER BY dname";	
		String empSql= " SELECT empno, ename, hiredate, sal+NVL(comm, 0) pay "
				+ " FROM emp "
				+ " WHERE deptno = ? "; //deptno IS NULL 체크
		Connection conn = DBConn.getConnection();
		PreparedStatement deptPstmt = null;
		PreparedStatement empPstmt = null;
		ResultSet empRs = null;
		ResultSet deptRs = null;
		DeptVO dvo = null;
		EmpVO evo = null;
		ArrayList<EmpVO> empList = null;
		LinkedHashMap<DeptVO, ArrayList<EmpVO>> lhMap = new LinkedHashMap<>();

		int deptno, cnt;
		String dname;

		int empno;
		String ename;
		LocalDateTime hiredate;
		double pay;

		try {

			deptPstmt = conn.prepareStatement(deptSql);
			deptRs = deptPstmt.executeQuery();

			while(deptRs.next()) {
				deptno = deptRs.getInt("deptno");
				dname = deptRs.getString("dname");
				cnt = deptRs.getInt("cnt");

				dvo = new DeptVO(deptno, dname, null, cnt);
				//				System.out.printf("%s(%d명)\n", dvo.getDname(), dvo.getCnt());



				//				해당 부서 사원 조회 start
				empPstmt = conn.prepareStatement(empSql);
				empPstmt.setInt(1,  deptno);
				empRs = deptPstmt.executeQuery();
				if(empRs.next()) {
					empList = new ArrayList<EmpVO>();
					do {						
						empno = empRs.getInt("empno");
						ename = empRs.getString("ename");
						hiredate = empRs.getTimestamp("hiredate").toLocalDateTime();
						pay = empRs.getDouble("pay");
						evo = new EmpVO().builder()//내가 안 필요한 애들까지 생성할 필요 없어
								.empno(empno)
								.ename(ename)
								.hiredate(hiredate)
								.sal(pay)
								.build();

						empList.add(evo);
					} while (empRs.next());
				}//if


				//				해당 부서 사원 조회end
				//				Map에 key는 deptVO로 value는 arraylist로 추가
				lhMap.put(dvo, empList);

			}//while
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			try {
				deptRs.close();
				deptPstmt.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		DBConn.close();

		dispLHMap(lhMap);
	}//main

	  private static void dispLHMap(LinkedHashMap<DeptVO, ArrayList<EmpVO>> lhMap) {
	      
	      Set<Entry<DeptVO, ArrayList<EmpVO>>>  eset = lhMap.entrySet();
	      Iterator<Entry<DeptVO, ArrayList<EmpVO>>> eir = eset.iterator();
	      while (eir.hasNext()) {
	         Entry<DeptVO, ArrayList<EmpVO>> entry = eir.next();
	          DeptVO dvo = entry.getKey();
	          // ACCOUNTING(2명) 
	          System.out.printf("%s(%d명) \n", dvo.getDname(), dvo.getCnt());
	          
	          ArrayList<EmpVO> empList = entry.getValue();
	          Iterator<EmpVO> ir = empList.iterator();
	          while (ir.hasNext()) {
	            EmpVO evo =  ir.next();
	            // empno ename hiredate pay
	            System.out.printf("\t%d\t%s\t%tF\t%.2f\n", 
	               evo.getEmpno(), evo.getEname(), evo.getHiredate()
	               , evo.getSal()   );
	         } // while
	         
	      } // while
	      
	      
	   }

}//class
